import { OnInit, EventEmitter } from '@angular/core';
import { AngularPaginatorService } from './services/angular-paginator.service';
/**
 * The component that renders the Pagination component template, It also accepts the inputs for the Pagination component
 */
export declare class AngularPaginatorComponent implements OnInit {
    private _angularPaginatorService;
    /**
     * Whether to display First / Last buttons
     */
    boundaryLinks: boolean;
    /**
     * Whether to display Previous / Next buttons
     */
    directionLinks: boolean;
    /**
     * Limit number for pagination size, i.e., the maximum page numbers to be displayed
     */
    maxSize: number;
    /**
     * Whether to keep current page in the middle of the visible ones
     */
    rotate: boolean;
    /**
      * Whether to always display the first and last page numbers.
      * If max-size is smaller than the number of pages, then the first and last page numbers are still shown with ellipses
      * in-between as necessary. NOTE: max-size refers to the center of the range.
      * This option may add up to 2 more numbers on each side of the displayed range for the end value and
      * what would be an ellipsis but is replaced by a number because it is sequential
      */
    boundaryLinkNumbers: boolean;
    /**
     * Also displays ellipses when rotate is true and maxSize is smaller than the number of pages forceEllipses
     */
    forceEllipses: boolean;
    /**
     * Use unique id when multiple paginations are being used on the same page. By Default Paginator uses id `ANGULAR_PAGINATOR_DEFAULT`
     */
    id: string;
    /**
     * Text for first button
     */
    firstText: string;
    /**
     * Text for previous button
     */
    previousText: string;
    /**
     * Text for next button
     */
    nextText: string;
    /**
     * Text for last button
     */
    lastText: string;
    /**
     * Screen reader text for first button
     */
    screenReaderFirstText: string;
    /**
    * Screen reader text for previous button
    */
    screenReaderPreviousText: string;
    /**
    * Screen reader text for next button
    */
    screenReaderNextText: string;
    /**
    * Screen reader text for lasr button
    */
    screenReaderLastText: string;
    /**
    * Screen reader text for page numbers
    */
    screenReaderPageText: string;
    /**
    * Screen reader text for current page
    */
    screenReaderCurrentPageText: string;
    /**
    * Screen reader text for the pagination component
    */
    screenReaderPaginationLabel: string;
    /**
    * Adds custom class to the pagination element
    */
    className: string;
    /**
     * Hides the pagination component if the items are less than `itemsPerPage`
     */
    autoHide: boolean;
    /**
     * disables pagination component
     */
    disabled: boolean;
    /**
     * Emits an event whenever the current page is changed, It emits the current page number
     *
     * This event is originally picked up from `AngularPaginatorDirective`
     */
    pageChange: EventEmitter<number>;
    /**
     *
     * @param _angularPaginatorService service for angular paginator
     */
    constructor(_angularPaginatorService: AngularPaginatorService);
    ngOnInit(): void;
}
